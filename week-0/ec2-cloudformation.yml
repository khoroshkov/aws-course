Description: Creating EC2 instance with with security group configured with ssh and http access to S3

Parameters:
  KeyName:
    Description: EC2 Instance SSH Key
    Type: AWS::EC2::KeyPair::KeyName

  InstanceType:
    Description: EC2 instance training configuration
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      ImageId: ami-00ee4df451840fa9d
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref HTTPSecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile

  SSHSecurityGroup:
    Description: This security group is configured for SSH access
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  HTTPSecurityGroup:
    Description: This security group is configured for HTTP access
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
        - !Ref S3Role

  S3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3Policy
      PolicyDocument:
        Statement:
          Effect: Allow
          Action:
            - s3:*
          Resource: '*'
      Roles:
        - Ref: S3Role

  S3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: '/'

Outputs:
  PublicIp:
    Description: EC2Instance public IP
    Value: !GetAtt EC2Instance.PublicIp
